import telebot
from telebot import types
import re
import time

TOKEN = '8132092948:AAH9POu-PTZ8u5fil-yb8MwrJUKI_lmcOys'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(TOKEN)

user_data = {}

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("üõí –°–±–æ—Ä—â–∏–∫", "üö≤ –ö—É—Ä—å–µ—Ä")
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞ –∫–∞–∫—É—é –ø–æ–∑–∏—Ü–∏—é —Ç—ã –ø—Ä–µ—Ç–µ–Ω–¥—É–µ—à—å?", reply_markup=markup)
    user_data[message.chat.id] = {}

@bot.message_handler(func=lambda message: message.text in ["üõí –°–±–æ—Ä—â–∏–∫", "üö≤ –ö—É—Ä—å–µ—Ä"])
def choose_role(message):
    user_data[message.chat.id]['role'] = message.text
    bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! –ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç", reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, process_age)

def process_age(message):
    if not message.text.isdigit():
        bot.send_message(message.chat.id, "‚≠ïÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä–∞–º–∏)")
        bot.register_next_step_handler(message, process_age)
        return

    age = int(message.text)
    if age < 18:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏, —Ç–µ–±–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 18 –ª–µ—Ç, —á—Ç–æ–±—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å —Å –°–∞–º–æ–∫–∞—Ç–æ–º üòî")
        return

    user_data[message.chat.id]['age'] = age

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("‚úÖ –î–∞", "‚ùå –ù–µ—Ç")
    bot.send_message(message.chat.id, "–°–æ—Ç—Ä—É–¥–Ω–∏—á–∞–ª –ª–∏ —Ç—ã —Ä–∞–Ω–µ–µ —Å –°–∞–º–æ–∫–∞—Ç–æ–º?", reply_markup=markup)
    bot.register_next_step_handler(message, process_experience)

def process_experience(message):
    user_data[message.chat.id]['experience'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("üá∑üá∫ –†–§", "üåç –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω")
    bot.send_message(message.chat.id, "–£—Ç–æ—á–Ω–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ—ë –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ", reply_markup=markup)
    bot.register_next_step_handler(message, process_citizenship)

def process_citizenship(message):
    user_data[message.chat.id]['citizenship'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "–¢—é–º–µ–Ω—å", "–ß–µ–ª—è–±–∏–Ω—Å–∫", "–ü–µ—Ä–º—å", "–°—É—Ä–≥—É—Ç", "–ò–∂–µ–≤—Å–∫", "–ö—É—Ä–≥–∞–Ω", "–ù–∏–∂–Ω–∏–π –¢–∞–≥–∏–ª", "–ù–µ—Ñ—Ç–µ—é–≥–∞–Ω—Å–∫", "–ú–∞–≥–Ω–∏—Ç–æ–≥–æ—Ä—Å–∫", "‚ùå –ù–µ—Ç –º–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞")
    bot.send_message(message.chat.id, "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ç—ã —Ö–æ—á–µ—à—å —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å?", reply_markup=markup)
    bot.register_next_step_handler(message, process_city)

def process_city(message):
    if message.text == "‚ùå –ù–µ—Ç –º–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞":
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞")
        bot.register_next_step_handler(message, process_city_input)
    else:
        user_data[message.chat.id]['city'] = message.text
        bot.send_message(message.chat.id, "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? –ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–µ –∏–º—è")
        bot.register_next_step_handler(message, process_name)

def process_city_input(message):
    if not message.text.isalpha():
        bot.send_message(message.chat.id, "‚≠ïÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
        bot.register_next_step_handler(message, process_city_input)
        return

    user_data[message.chat.id]['city'] = message.text
    bot.send_message(message.chat.id, "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? –ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–µ –∏–º—è")
    bot.register_next_step_handler(message, process_name)

def process_name(message):
    if not message.text.replace(" ", "").isalpha():
        bot.send_message(message.chat.id, "‚≠ïÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è")
        bot.register_next_step_handler(message, process_name)
        return

    user_data[message.chat.id]['name'] = message.text

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("üìû –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "‚úçÔ∏è –ù–∏–∫ –≤ Telegram")
    bot.send_message(message.chat.id, "–ö–∞–∫ —Å —Ç–æ–±–æ–π –ª—É—á—à–µ —Å–≤—è–∑–∞—Ç—å—Å—è? –í—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:", reply_markup=markup)
    bot.register_next_step_handler(message, process_contact_choice)

def process_contact_choice(message):
    if message.text == "üìû –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã):", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, process_phone)
    elif message.text == "‚úçÔ∏è –ù–∏–∫ –≤ Telegram":
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∏–∫ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add("‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –Ω–∏–∫", "üîç –ì–¥–µ –Ω–∞–π—Ç–∏ –Ω–∏–∫?")
        bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ ¬´–í–≤–µ—Å—Ç–∏ –Ω–∏–∫¬ª, –µ—Å–ª–∏ —Ç—ã –µ–≥–æ –∑–Ω–∞–µ—à—å, –∏–ª–∏ –≤—ã–±–µ—Ä–∏, ¬´–ì–¥–µ –µ–≥–æ –Ω–∞–π—Ç–∏¬ª, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å:", reply_markup=markup)
        bot.register_next_step_handler(message, process_nick_choice)
    else:
        bot.send_message(message.chat.id, "‚≠ïÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏: –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –Ω–∏–∫ –≤ Telegram")
        bot.register_next_step_handler(message, process_contact_choice)

def process_nick_choice(message):
    if message.text == "üîç –ì–¥–µ –Ω–∞–π—Ç–∏ –Ω–∏–∫?":
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–≤–æ–¥–∞ –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∏–∫–∞
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add("‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –Ω–∏–∫", "üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫")
        bot.send_message(
            message.chat.id,
            "üîç –ö–∞–∫ –Ω–∞–π—Ç–∏ —Å–≤–æ–π –Ω–∏–∫ –≤ Telegram?\n\n"
            "üì± –ù–∞ Android:\n"
            "1. –û—Ç–∫—Ä–æ–π Telegram\n"
            "2. –ù–∞–∂–º–∏ ‚ò∞ (—Ç—Ä–∏ –ø–æ–ª–æ—Å–∫–∏ –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É)\n"
            "3. –ü–µ—Ä–µ–π–¥–∏ –≤ ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª\n"
            "4. –¢–≤–æ–π –Ω–∏–∫ —É–∫–∞–∑–∞–Ω –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è¬ª, —Ç—ã –º–æ–∂–µ—à—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –ø—Ä—è–º–æ –æ—Ç—Ç—É–¥–∞\n\n"
            "üì± –ù–∞ iPhone:\n"
            "1. –û—Ç–∫—Ä–æ–π Telegram\n"
            "2. –ü–µ—Ä–µ–π–¥–∏ –≤ ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª (—à–µ—Å—Ç–µ—Ä—ë–Ω–∫–∞ –≤–Ω–∏–∑—É)\n"
            "3. –ù–∞–∂–º–∏ ¬´–ò–∑–º.¬ª –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É\n"
            "4. –¢–≤–æ–π –Ω–∏–∫ —É–∫–∞–∑–∞–Ω –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è¬ª, —Ç—ã –º–æ–∂–µ—à—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –ø—Ä—è–º–æ –æ—Ç—Ç—É–¥–∞\n\n"
            "‚ùóÔ∏è–ï—Å–ª–∏ —É —Ç–µ–±—è –Ω–µ—Ç –Ω–∏–∫–∞, —Ç–æ —Ç—ã –º–æ–∂–µ—à—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–≥–æ –≤ —ç—Ç–æ–º –∂–µ —Ä–∞–∑–¥–µ–ª–µ"
        )
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:", reply_markup=markup)
        bot.register_next_step_handler(message, process_nick_setup_choice)
    elif message.text == "‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –Ω–∏–∫":
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –Ω–∏–∫ –≤ Telegram, –Ω–∞—á–∏–Ω–∞—è —Å @", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, process_telegram_nick)
    else:
        bot.send_message(message.chat.id, "‚≠ïÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: ¬´–í–≤–µ—Å—Ç–∏ –Ω–∏–∫¬ª –∏–ª–∏ ¬´–ì–¥–µ –Ω–∞–π—Ç–∏ –Ω–∏–∫?¬ª")
        bot.register_next_step_handler(message, process_nick_choice)

def process_nick_setup_choice(message):
    if message.text == "üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫":
        bot.send_message(
            message.chat.id,
            "üîß –ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫ –≤ Telegram?\n\n"
            "üì± –ù–∞ Android:\n"
            "1. –û—Ç–∫—Ä–æ–π Telegram\n"
            "2. –ù–∞–∂–º–∏ ‚ò∞ (—Ç—Ä–∏ –ø–æ–ª–æ—Å–∫–∏ –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É)\n"
            "3. –ü–µ—Ä–µ–π–¥–∏ –≤ ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª\n"
            "4. –ù–∞–∂–º–∏ –Ω–∞ —Ä–∞–∑–¥–µ–ª ¬´–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è¬ª\n"
            "5. –í–≤–µ–¥–∏ —Å–≤–æ–π –Ω–æ–≤—ã–π –Ω–∏–∫\n"
            "6. –ù–∞–∂–º–∏ ¬´–ì–æ—Ç–æ–≤–æ¬ª\n\n"
            "üì± –ù–∞ iPhone:\n"
            "1. –ü–µ—Ä–µ–π–¥–∏ –≤ ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª (—à–µ—Å—Ç–µ—Ä—ë–Ω–∫–∞ –≤–Ω–∏–∑—É)\n"
            "2. –ù–∞–∂–º–∏ ¬´–ò–∑–º.¬ª –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É\n"
            "3. –ù–∞–∂–º–∏ –Ω–∞ —Ä–∞–∑–¥–µ–ª ¬´–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è¬ª\n"
            "4. –í–≤–µ–¥–∏ —Å–≤–æ–π –Ω–æ–≤—ã–π –Ω–∏–∫\n"
            "5. –ù–∞–∂–º–∏ ¬´–ì–æ—Ç–æ–≤–æ¬ª"
        )
        bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å–≤–æ–π –Ω–æ–≤—ã–π –Ω–∏–∫, –Ω–∞—á–∏–Ω–∞—è —Å @")
        bot.register_next_step_handler(message, process_telegram_nick)
    elif message.text == "‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –Ω–∏–∫":
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –Ω–∏–∫ –≤ Telegram, –Ω–∞—á–∏–Ω–∞—è —Å @", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, process_telegram_nick)
    else:
        bot.send_message(message.chat.id, "‚≠ïÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: ¬´–í–≤–µ—Å—Ç–∏ –Ω–∏–∫¬ª –∏–ª–∏ ¬´–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫¬ª")
        bot.register_next_step_handler(message, process_nick_setup_choice)

def process_phone(message):
    if not message.text.isdigit():
        bot.send_message(message.chat.id, "‚≠ïÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã)")
        bot.register_next_step_handler(message, process_phone)
        return

    user_data[message.chat.id]['contact'] = message.text
    process_finish(message)

def process_telegram_nick(message):
    username = message.text.strip()
    if not username.startswith("@"):
        username = "@" + username

    if not re.match(r"^@[A-Za-z0-9_]{5,}$", username):
        bot.send_message(message.chat.id, "‚≠ïÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–∏–∫ –≤ Telegram")
        bot.register_next_step_handler(message, process_telegram_nick)
        return

    user_data[message.chat.id]['contact'] = username
    process_finish(message)

def process_finish(message):
    bot.send_message(message.chat.id, "‚úÖ –°–ø–∞—Å–∏–±–æ! –°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è —Ä–µ–∫—Ä—É—Ç–µ—Ä, —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!")

    user = user_data[message.chat.id]
    bot.send_message('443359121', f"–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞:\n–†–æ–ª—å: {user['role']}\n–í–æ–∑—Ä–∞—Å—Ç: {user['age']}\n–†–∞–Ω–µ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–ª —Å –°–∞–º–æ–∫–∞—Ç–æ–º: {user['experience']}\n–ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ: {user['citizenship']}\n–ì–æ—Ä–æ–¥: {user['city']}\n–ò–º—è: {user['name']}\n–ö–æ–Ω—Ç–∞–∫—Ç: {user['contact']}")

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("üîÑ –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å –∑–∞–Ω–æ–≤–æ")
    bot.send_message(message.chat.id, "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", reply_markup=markup)
    user_data.pop(message.chat.id)

@bot.message_handler(func=lambda message: message.text == "üîÑ –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å –∑–∞–Ω–æ–≤–æ")
def restart_survey(message):
    start(message)

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
bot.polling(none_stop=True)
